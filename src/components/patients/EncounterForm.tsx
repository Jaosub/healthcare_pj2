import React from 'react';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import * as z from 'zod';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from '@/components/ui/form';
import { Textarea } from '@/components/ui/textarea';

// üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á schema
const encounterFormSchema = z.object({
  patient_id: z.string().min(1, { message: '‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢' }),
  doctor_id: z.string().min(1, { message: '‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏û‡∏ó‡∏¢‡πå' }),
  symptoms: z.string().min(1, { message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏Å‡∏≤‡∏£' }),
  diagnosis: z.string().min(1, { message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢' }),
  treatment: z.string().min(1, { message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤' }),
  note: z.string().optional()
});

type EncounterFormValues = z.infer<typeof encounterFormSchema>;

interface EncounterFormProps {
  onSubmit: (values: EncounterFormValues) => void;
  isLoading: boolean;
}

const EncounterForm = ({ onSubmit, isLoading }: EncounterFormProps) => {
  const form = useForm<EncounterFormValues>({
    resolver: zodResolver(encounterFormSchema),
    defaultValues: {
      patient_id: '',
      doctor_id: '',
      symptoms: '',
      diagnosis: '',
      treatment: '',
      note: '',
    },
  });

  return (
    <Form {...form}>
      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
        <FormField
          control={form.control}
          name="patient_id"
          render={({ field }) => (
            <FormItem>
              <FormLabel>‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢</FormLabel>
              <FormControl>
                <Input placeholder="‡πÉ‡∏™‡πà patient_id (13 ‡∏´‡∏•‡∏±‡∏Å)" {...field} />
              </FormControl>
              <FormMessage />
            </FormItem>
          )}
        />

        <FormField
          control={form.control}
          name="doctor_id"
          render={({ field }) => (
            <FormItem>
              <FormLabel>‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏û‡∏ó‡∏¢‡πå</FormLabel>
              <FormControl>
                <Input placeholder="‡πÉ‡∏™‡πà doctor_id (13 ‡∏´‡∏•‡∏±‡∏Å)" {...field} />
              </FormControl>
              <FormMessage />
            </FormItem>
          )}
        />

        <FormField
          control={form.control}
          name="symptoms"
          render={({ field }) => (
            <FormItem>
              <FormLabel>‡∏≠‡∏≤‡∏Å‡∏≤‡∏£</FormLabel>
              <FormControl>
                <Textarea placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏°‡∏µ‡πÑ‡∏Ç‡πâ ‡πÑ‡∏≠ ‡πÄ‡∏à‡πá‡∏ö‡∏Ñ‡∏≠..." {...field} />
              </FormControl>
              <FormMessage />
            </FormItem>
          )}
        />

        <FormField
          control={form.control}
          name="diagnosis"
          render={({ field }) => (
            <FormItem>
              <FormLabel>‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢</FormLabel>
              <FormControl>
                <Textarea placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏ß‡∏±‡∏î, ‡πÑ‡∏Ç‡πâ‡∏´‡∏ß‡∏±‡∏î‡πÉ‡∏´‡∏ç‡πà" {...field} />
              </FormControl>
              <FormMessage />
            </FormItem>
          )}
        />

        <FormField
          control={form.control}
          name="treatment"
          render={({ field }) => (
            <FormItem>
              <FormLabel>‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤</FormLabel>
              <FormControl>
                <Textarea placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÉ‡∏´‡πâ‡∏¢‡∏≤‡∏•‡∏î‡πÑ‡∏Ç‡πâ, ‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô" {...field} />
              </FormControl>
              <FormMessage />
            </FormItem>
          )}
        />

        <FormField
          control={form.control}
          name="note"
          render={({ field }) => (
            <FormItem>
              <FormLabel>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)</FormLabel>
              <FormControl>
                <Textarea placeholder="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°..." {...field} />
              </FormControl>
              <FormMessage />
            </FormItem>
          )}
        />

        <div className="flex justify-end">
          <Button type="submit" disabled={isLoading}>
            {isLoading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...' : '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤'}
          </Button>
        </div>
      </form>
    </Form>
  );
};

export default EncounterForm;
